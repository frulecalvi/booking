services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: ${DOCKER_REPOSITORY_HOST}/${DOCKER_REPOSITORY_USER}/booking-app:$BUILD_VERSION
        container_name: booking_app_${APP_ENV}
        restart: unless-stopped
        tty: true
        working_dir: /var/www/html
        volumes:
            - booking_storage:/var/www/html/storage
            - booking_cache:/var/www/html/bootstrap/cache
        expose:
            - 9000
        networks:
            - booking_network

    webserver:
        build:
            context: .
            dockerfile: Dockerfile.nginx
        image: ${DOCKER_REPOSITORY_HOST}/${DOCKER_REPOSITORY_USER}/booking-webserver:$BUILD_VERSION
        container_name: booking_webserver_${APP_ENV}
        restart: unless-stopped
        volumes:
            - booking_storage:/var/www/html/storage
        tty: true
        ports:
            - ${APP_PORT}:80
        networks:
            - booking_network

    db:
        build:
            context: .
            dockerfile: Dockerfile.mariadb
        image: ${DOCKER_REPOSITORY_HOST}/${DOCKER_REPOSITORY_USER}/booking-db:$BUILD_VERSION
        container_name: booking_db_${APP_ENV}
        restart: unless-stopped
        tty: true
        environment:
            MARIADB_DATABASE: booking
            MARIADB_USER: $DB_USERNAME
            MARIADB_PASSWORD: $DB_PASSWORD
            MARIADB_RANDOM_ROOT_PASSWORD: 'yes'
        volumes:
            - booking_db-data_${APP_ENV}:/var/lib/mysql
        networks:
            - booking_network_${APP_ENV}

networks:
    booking_network:
        name: booking_network_${APP_ENV}
        driver: bridge
    
volumes:
    booking_app:
        name: booking_app_${APP_ENV}
        driver: local
    booking_storage:
        name: booking_storage_${APP_ENV}
        driver: local
    booking_cache:
        name: booking_cache_${APP_ENV}
        driver: local
    booking_db-data:
        name: booking_db-data_${APP_ENV}
        driver: local
